<button
  id="dark-mode-toggle"
  aria-label="dark mode toggle"
  aria-pressed="false"
  class=" flex justify-center items-center border w-12 h-12 p-0 bg-transparent absolute top-2.5 right-[4.375rem] z-[1000] overflow-hidden sm:m-0 sm:relative sm:top-auto sm:right-auto sm:transform-none sm:hover:cursor-pointer"
>
  <svg
    id="cs-moon"
    class="w-[1.25rem] h-[1.25rem] absolute bottom-1/2 left-1/2 transform z-[2] -translate-x-1/2 -translate-y-1/2 transition-all fill-white opacity-0 dark:opacity-100 dark:translate-y-1/2 dark:fill-black"
    xmlns="http://www.w3.org/2000/svg"
    viewBox="0 0 480 480"
    style="enable-background:new 0 0 480 480"
    xml:space="preserve"
    ><path
      d="M459.782 347.328c-4.288-5.28-11.488-7.232-17.824-4.96-17.76 6.368-37.024 9.632-57.312 9.632-97.056 0-176-78.976-176-176 0-58.4 28.832-112.768 77.12-145.472 5.472-3.712 8.096-10.4 6.624-16.832S285.638 2.4 279.078 1.44C271.59.352 264.134 0 256.646 0c-132.352 0-240 107.648-240 240s107.648 240 240 240c84 0 160.416-42.688 204.352-114.176 3.552-5.792 3.04-13.184-1.216-18.496z"
    ></path></svg
  >
  <img
    id="cs-sun"
    class="w-[1.25rem] h-[1.25rem] absolute top-1/2 left-1/2 opacity-100 z-[1] transform -translate-x-1/2 -translate-y-1/2 transition-all dark:opacity-0 dark:translate-y-1/2"
    aria-hidden="true"
    src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons%2Fsun.svg"
    decoding="async"
    alt="moon"
  />
</button>

<script>
  // helper function to toggle aria-pressed
  function ariaPressed(element: any) {
    const isPressed = element.getAttribute("aria-pressed");
    element.setAttribute(
      "aria-pressed",
      isPressed === "false" ? "true" : "false",
    );
  }
  // Creates the dark mode toggle event listener
  const setToggleListener = () => {
    const darkModeToggleButton = document.getElementById("dark-mode-toggle");
    const handleToggleClick = () => {
      // document.body.classList.toggle("dark-mode");
      document.documentElement.classList.toggle("dark");
      ariaPressed(darkModeToggleButton);
      // const isDark = document.body.classList.contains("dark-mode");
      const isDark = document.documentElement.classList.contains("dark")
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    darkModeToggleButton?.addEventListener("click", handleToggleClick);
  };

  setToggleListener();

  document.addEventListener("astro:after-swap", setToggleListener); // For View Transitions purposes - astro:after-swap ensures that the listener is re-attached after navigating to a new page.
</script>
