---
import { cn } from "@utils/utils";
import DarkModeToggle from "./TemplateComponents/DarkModeToggle.astro";
import navData from "@data/navData";

// Styles
const navigation =
  "w-[94%] max-w-[80rem] box-border max-md:p-[clamp(0.75rem,2vw,1.5rem)] rounded-[clamp(0.75rem,2vw,1.5rem)] fixed top-[2rem] left-1/2 z-[10000] transform translate-x-[-50%] transition-all duration-300 md:max-w-[90rem] md:h-[6rem] md:py-[clamp(0.75rem,2vw,1.5rem)] md:bg-white md:shadow-lg md:flex md:items-center md:top-8 dark:before:bg-dark md:dark:bg-dark";
const navigationBefore =
  "before:content-[''] before:w-full before:h-full before:bg-white before:shadow-lg before:opacity-100 before:rounded-[clamp(0.75rem,2vw,1.5rem)] before:block before:absolute before:top-0 before:left-1/2 before:translate-x-[-50%] before:transition-transform before:duration-200 before:transition-[border-radius] duration-300 ease-in-out";
const container =
  "w-full flex justify-end items-center gap-6 md:w-full md:max-w-[90rem] md:m-auto md:box-border md:px-6 md:flex md:justify-between md:items-center md:gap-0";
const logo =
  "w-auto max-w-[12.5rem] h-full mr-auto box-border p-0 flex justify-start items-center z-[10] md:w-[18.4%] md:max-w-[21.875rem] md:h-8 md:mr-auto md:p-0 md:flex md:justify-start md:items-center md:z-[100] dark:grayscale dark:brightness-[1000%] md:dark:grayscale md:dark:brightness-[1000%]";
const logoImg =
  "w-full h-full object-contain md:w-auto md:h-full md:object-contain";
const nav = "order-4";
const toggle =
  "w-[3.5rem] h-[3.5rem] ml-auto bg-headerColor border-none rounded flex justify-center items-center relative z-[10] transform transition-transform duration-[0.6s] md:hidden dark:bg-accent";
const box = "w-[clamp(1.5rem,2vw,1.75rem)] h-4 relative";
const line =
  "w-full h-0.5 bg-bodyTextColorWhite rounded-sm absolute left-1/2 transform -translate-x-1/2 dark:white";
const line1 = "top-0 transform transition-all duration-[0.6s] origin-center";
const line2 =
  "top-1/2 transform -translate-x-1/2 -translate-y-1/2 transition-all duration-[0.6s] ";
const line3 = "bottom-0 transform transition-all duration-[0.6s]";
const ulWrapper =
  "max-md:w-full h-auto max-md:pb-[2.4em] max-md:bg-white max-md:rounded-bl-[1.5rem] max-md:rounded-br-[1.5rem] absolute top-[85%] left-0 max-md:z-[-1] max-md:overflow-hidden max-md:scale-y-0 transform transition-transform duration-[0.4s] origin-top md:h-full md:flex md:items-center md:absolute md:top-1/2 md:left-1/2 md:transform md:translate-x-[-50%] md:translate-y-[-50%] max-md:dark:bg-medium";
const ul =
  "w-full h-auto max-h-[65vh] m-0 pt-[4rem] flex flex-col justify-start items-center gap-[1.25rem] max-md:overflow-auto md:h-full md:m-0 md:p-0 md:flex-row md:gap-[clamp(1.25rem,2.6vw,2.25rem)]";
const li =
  "max-md:text-center list-none max-md:w-full mr-0 opacity-100 transform translate-y-[-70/16rem] transition-all duration-[0.6s] max-md:text-center max-md:w-full max-md:block md:list-none md:h-full md:p-0 md:flex md:items-center md:flex-none";
const liLink =
  "text-[clamp(1rem,2.5vw,1.5rem)] leading-[1.2em] no-underline m-0 text-headerColor inline-block relative hover:text-primary md:text-base md:leading-[1.5em] md:no-underline md:m-0 md:text-headerColor md:block md:relative md:transform md:transition-colors md:duration-300 md:hover:text-primary dark:text-bodyTextColorWhite dark:hover:text-secondary md:dark:text-bodyTextColorWhite md:dark:hover:text-secondary";
const dropdown =
  "max-md:text-bodyTextColorWhite max-md:relative md:relative md:hover:cursor-pointer group";
const dropdownLiLink =
  "max-md:relative max-md:transform max-md:transition-opacity max-md:duration-300 hover:cursor-pointer";
const dropIcon =
  "max-md:w-[0.9375rem] max-md:h-auto max-md:absolute max-md:top-1/2 max-md:right-[-1.25rem] max-md:transform max-md:translate-y-[-50%] md:w-[0.9375rem] md:h-auto md:inline-block";
const dropUl =
  "max-md:w-full max-md:h-0 max-md:m-0 max-md:p-0 max-md:bg-primary max-md:opacity-0 max-md:flex max-md:invisible max-md:flex-col max-md:justify-start max-md:items-center max-md:gap-3 max-md:overflow-hidden max-md:transform max-md:transition-all max-md:duration-300 group-hover:md:opacity-100 group-hover:md:visible group-hover:md:transform group-hover:md:scale-y-100 md:min-w-[12.5rem] md:m-0 md:p-0 md:bg-white md:shadow-inner md:opacity-0 md:border-b-[5px] md:border-b-primary md:rounded-b-3xl  md:invisible md:absolute md:top-full md:z-[-100] md:overflow-hidden md:transform md:scale-y-0 md:transition-all md:duration-300 md:origin-top md:dark:bg-medium";
const dropLi =
  "max-md:list-none group-hover:md:opacity-100 group-hover:md:transform group-hover:md:translate-y-0 md:text-base md:no-underline md:list-none md:w-full md:h-auto md:opacity-0 md:block md:transform md:translate-y-[-0.625rem] md:transition-all md:duration-[0.6s]";
const dropLink =
  "max-md:text-[clamp(0.875rem,2vw,1.25rem)] max-md:text-white md:text-base md:leading-[1.5em] md:capitalize md:no-underline md:whitespace-nowrap md:w-full md:box-border md:p-3 md:text-headerColor md:dark:text-bodyTextColorWhite hover:dark:text-headerColor md:block md:transform md:transition-all md:duration-300 md:hover:text-bodyTextColorWhite md:hover:bg-primary md:before:hidden md:dark:hover:text-bodyTextColorWhite";
const contactGroup =
  "hidden relative z-[10] sm:block md:flex md:justify-center md:items-center md:gap-6";
const phone =
  "text-base leading-[1.5em] no-underline m-0 text-headerColor flex justify-start items-center gap-2 transform transition-all duration-300 md:text-base md:leading-[1.5em] md:no-underline md:m-0 md:text-headerColor md:flex md:justify-start md:items-center md:gap-2 md:transform md:transition-all md:duration-300 dark:text-bodyTextColorWhite md:dark:text-bodyTextColorWhite";
const phoneIcon =
  "w-[1.5rem] h-auto block md:w-6 md:h-auto md:block dark:grayscale dark:brightness-[1000%] md:dark:grayscale md:dark:brightness-[1000%]";
const social =
  "hidden md:h-8 md:opacity-100 md:hidden md:visible md:justify-center md:items-center md:gap-2 md:transform md:transition-all md:duration-300 lg:flex";
const socialLink =
  "md:no-underline md:w-8 md:h-8 md:bg-[#f7f7f7] md:rounded-full md:flex md:justify-center md:items-center md:transform md:transition-colors md:duration-300 md:hover:bg-primary group";
const socialIcon =
  "md:w-3 md:h-auto md:opacity-60 md:block md:transform md:transition-opacity md:duration-300 group-hover:md:opacity-100 group-hover:md:grayscale group-hover:md:brightness-[10000%]";
---

<header id="navigation" class={cn(navigation, navigationBefore, "navigation")}>
  <div class={cn(container)}>
    <!--Nav Logo-->
    <!--Logo is turned white in the css with a filter on dark mode-->
    <a href="/" class={cn(logo)} aria-label="back to home">
      <img
        class={cn(logoImg)}
        src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Graphics/day-care.svg"
        alt="logo"
        width="210"
        height="29"
        aria-hidden="true"
        decoding="async"
      />
    </a>
    <!--Navigation List-->
    <nav class={cn(nav)} role="navigation">
      <!--Mobile Nav Toggle-->
      <button class={cn(toggle, "toggle")} aria-label="mobile menu toggle">
        <div class={cn(box)} aria-hidden="true">
          <span class={cn(line, line1, "line1")} aria-hidden="true"></span>
          <span class={cn(line, line2, "line2")} aria-hidden="true"></span>
          <span class={cn(line, line3, "line3")} aria-hidden="true"></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
      <div class={cn(ulWrapper, "ul-wrapper")}>
        <ul id="expanded" class={cn(ul)} aria-expanded="false">
          <li class={cn(li, "li")}>
            <a href="/" class={cn(liLink, "active")}> Home </a>
          </li>
          <li class={cn(li, "li")}>
            <a href="" class={cn(liLink)}> About </a>
          </li>
          <!--Copy and paste this cs-dropdown list item and replace any .cs-li with this cs-dropdown group to make a new dropdown and it will work-->
          <li class={cn(li, dropdown, "dropdown")} tabindex="0">
            <span class={cn(liLink, dropdownLiLink)}>
              Services
              <img
                class={cn(dropIcon)}
                src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/down-gold.svg"
                alt="dropdown icon"
                width="15"
                height="15"
                decoding="async"
                aria-hidden="true"
              />
            </span>
            <ul class={cn(dropUl, "drop-ul")}>
              <li class={cn(dropLi)}>
                <a href="" class={cn(dropLink, dropdownLiLink, "drop-link")}
                  >Registration</a
                >
              </li>
              <li class={cn(dropLi)}>
                <a href="" class={cn(dropLink, dropdownLiLink, "drop-link")}
                  >Our Classes</a
                >
              </li>
            </ul>
          </li>
          <li class={cn(li, "li")}>
            <a href="" class={cn(liLink)}> Blog </a>
          </li>
          <li class={cn(li, "li")}>
            <a href="" class={cn(liLink)}> Contact </a>
          </li>
        </ul>
      </div>
    </nav>
    <div class={cn(contactGroup)}>
      <a href="tel:+84 1985 33 999" class={cn(phone)}>
        <img
          class={cn(phoneIcon)}
          src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/phone-1a.svg"
          alt="logo"
          width="24"
          height="24"
          aria-hidden="true"
          decoding="async"
        />
        +84 1985 33 999
      </a>
      <div class={cn(social)}>
        <a href="" class={cn(socialLink)}>
          <img
            class={cn(socialIcon)}
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/facebook-1a.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
        <a href="" class={cn(socialLink)}>
          <img
            class={cn(socialIcon)}
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/twitter-1a.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
        <a href="" class={cn(socialLink)}>
          <img
            class={cn(socialIcon)}
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/instagram1a.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
        <a href="" class={cn(socialLink)}>
          <img
            class={cn(socialIcon)}
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/youtube1a.svg"
            alt="logo"
            width="12"
            height="12"
            aria-hidden="true"
            decoding="async"
          />
        </a>
      </div>
    </div>
    <DarkModeToggle />
  </div>
</header>

<style>
  body.open {
    @apply overflow-hidden;
  }
  body.scroll .navigation {
    @apply w-full max-w-full top-0;
  }
  body.scroll .navigation:before {
    @apply rounded-none;
  }
  body.scroll .navigation .ul-wrapper {
    @apply top-full;
  }
  .navigation.active:before {
    @apply translate-x-[-50%] transform scale-[1.03];
  }
  .navigation.active .toggle {
    @apply rotate-180;
  }
  .navigation.active .ul-wrapper {
    @apply transform scale-y-100 delay-150;
  }
  .navigation.active .li {
    @apply opacity-100 translate-y-0;
  }
  .active .line1 {
    @apply top-1/2 transform -translate-x-1/2 -translate-y-1/2 rotate-[225deg];
  }
  .active .line2 {
    @apply top-1/2 transform -translate-x-1/2 -translate-y-1/2 rotate-[-225deg] origin-center;
  }
  .active .line3 {
    @apply opacity-0 bottom-full;
  }
  .li:nth-of-type(1) {
    @apply delay-[0.05s];
  }
  .li:nth-of-type(2) {
    @apply delay-[0.1s];
  }
  .li:nth-of-type(3) {
    @apply delay-[0.15s];
  }
  .li:nth-of-type(4) {
    @apply delay-[0.2s];
  }
  .li:nth-of-type(5) {
    @apply delay-[0.25s];
  }
  .li:nth-of-type(6) {
    @apply delay-[0.3s];
  }
  .li:nth-of-type(7) {
    @apply delay-[0.35s];
  }
  .li:nth-of-type(8) {
    @apply delay-[0.4s];
  }
  .li:nth-of-type(9) {
    @apply delay-[0.45s];
  }
  .li:nth-of-type(10) {
    @apply delay-[0.5s];
  }
  .li:nth-of-type(11) {
    @apply delay-[0.55s];
  }
  .li:nth-of-type(12) {
    @apply delay-[0.6s];
  }
  .li:nth-of-type(13) {
    @apply delay-[0.65s];
  }
  .li-link.active {
    @apply text-primary;
  }
  .dropdown.active .drop-ul {
    @apply max-md:h-auto max-md:mt-3 max-md:py-3 max-md:opacity-100 max-md:visible;
  }
  .dropdown.active .drop-link {
    @apply max-md:opacity-100;
  }
  body.scroll #navigation {
    @apply md:w-full md:max-w-full md:rounded-none md:top-0;
  }
  .li-link.active {
    @apply text-primary;
  }
  .li-link.active {
    @apply dark:text-secondary;
  }
</style>

<script>
  let body = document.querySelector("body");
  const navbarMenu = document.querySelector(".navigation");
  const hamburgerMenu = document.querySelector(".navigation .toggle");

  hamburgerMenu?.addEventListener("click", () => {
    hamburgerMenu.classList.toggle("active");
    navbarMenu?.classList.toggle("active");
    body?.classList.toggle("open");
    // Run the function to check the aria-expanded value
    ariaExpanded();
  });

  // Checks the value of aria expanded on the ul and changes it accordingly whether it is expanded or not
  const ariaExpanded = () => {
    const ul = document.querySelector("#expanded");
    const expanded = ul?.getAttribute("aria-expanded");

    if (expanded === "false") {
      ul?.setAttribute("aria-expanded", "true");
    } else {
      ul?.setAttribute("aria-expanded", "false");
    }
  };

  // This script adds a class to the body after scrolling 100px and we used these body.scroll styles to create some on scroll animations with the navbar
  document.addEventListener("scroll", (e) => {
    const scroll = document.documentElement.scrollTop;
    if (scroll >= 100) {
      document.querySelector("body")?.classList.add("scroll");
    } else {
      document.querySelector("body")?.classList.remove("scroll");
    }
  });

  // Mobile nav toggle code
  const dropDowns = Array.from(
    document.querySelectorAll("#navigation .dropdown"),
  );
  for (const item of dropDowns) {
    const onClick = () => {
      item.classList.toggle("active");
    };
    item.addEventListener("click", onClick);
  }
</script>
