---
import Footer from "@components/Footer.astro";
import Header from "@components/Header.astro";
import { ViewTransitions } from "astro:transitions";
import client from "@data/client.json";

interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!-- A fully fleshed-out <head>, dynamically changing based on client.json and the page front matter --><!doctype html>
<html lang="en">
  <head>
    <!-- ViewTransitions support -->
    <ViewTransitions />

    <!-- Standard meta tags -->
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <meta name="keywords" content="" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link
      rel="canonical"
      href={`https://${client.domain}${Astro.url.pathname}`}
    />

    <!--Social Media Display-->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`https://${client.domain}${Astro.url.pathname}`}
    />
    <meta property="og:image" content="/assets/images/logo-small.png" />
    <meta
      property="og:image:secure_url"
      content="/assets/images/logo-small.png"
    />

    <!-- Favicons -->
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/assets/favicons/apple-touch-icon.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/assets/favicons/favicon-32x32.png?v1"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/assets/favicons/favicon-16x16.png"
    />
    <link rel="manifest" href="/assets/favicons/site.webmanifest" />
    <meta name="msapplication-TileColor" content="#da532c" />
    <meta name="theme-color" content="#ffffff" />

    <!--For home page, use service keywords for the title, including location for SEO.
        Other pages should just include the page name.
        
        EXAMPLE:
        Home page - House Painting Contractors | Painters and Co. | TestCity, WA
        About Page - About us | Painters and Co.
        -->
    <title>
      {
        Astro.url.pathname === "/"
          ? `${title}
        |
        ${client.name}
        |
        ${client.address.city},
        ${client.address.state}
        `
          : `${title}
      |
      ${client.name}
      `
      }
    </title>

    <!-- Decap CMS scripts (for blog functionality) -->
    <!-- {Astro.url.pathname === "/" &&
    <script defer src="https://identity.netlify.com/v1/netlify-identity-widget.js"></script>
    <script defer>
        if (window.netlifyIdentity) {
            window
                .netlifyIdentity
                .on('init', (user) => {
                    if (!user) {
                        window
                            .netlifyIdentity
                            .on('login', () => {
                                document.location.href = '/admin/';
                            });
                    }
                });
        }
    </script>
} -->
  </head>
  <body>
    <!--Screen reader skip main nav-->
    <a
      class="opacity-0 absolute top-0 left-0 -z-50"
      aria-label="skip to main content"
      href="#main">Click To Skip To Main Content</a
    >
    <Header />
    <main id="main">
      <slot />
    </main>
    <Footer />
  </body>
</html>

<script is:inline>
  // helper functions to toggle dark mode
  function enableDarkMode() {
    document.body.classList.add("dark-mode");
    localStorage.setItem("theme", "dark");
  }

  function disableDarkMode() {
    document.body.classList.remove("dark-mode");
    localStorage.setItem("theme", "light");
  }

  function setTheme() {
    // default to the light theme
    let theme = "light";

    // check localStorage for a saved 'theme' variable. if it's there, the user has visited before, so apply the necessary theme choices
    if (localStorage.getItem("theme")) {
      theme = localStorage.getItem("theme");
    }
    // if it's not there, check to see if the user has applied dark mode preferences themselves in the browser
    else if (
      window.matchMedia &&
      window.matchMedia("(prefers-color-scheme: dark)").matches
    ) {
      theme = "dark";
    }

    // if there is no preference set, the default of light will be used. apply accordingly
    theme === "dark" ? enableDarkMode() : disableDarkMode();
  }

  setTheme();

  document.addEventListener("astro:after-swap", setTheme); // For View Transitions purposes - astro:after-swap ensures that the theme is kept after navigating to a new page.
</script>

<!-- Astro initial styles -->
<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }
  html {
    font-family: system-ui, sans-serif;
    background: #13151a;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
</style>
